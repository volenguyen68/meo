{"version":3,"sources":["type.ts"],"names":[],"mappings":"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","file":"type.js","sourcesContent":["// Inspired By\n// https://codepen.io/abeatrize/pen/LJqYey\n\n// Bongo Cat originally created by @StrayRogue and @DitzyFlama\n\nconst ID = \"bongo-cat\";\nconst s = (selector: string) => `#${ID} ${selector}`;\nconst notes = document.querySelectorAll(\".note\");\n\nfor (let note of notes) {\n  note?.parentElement?.appendChild(note.cloneNode(true));\n  note?.parentElement?.appendChild(note.cloneNode(true));\n}\n\nconst music = { note: s(\".music .note\") };\nconst cat = {\n  pawRight: {\n    up: s(\".paw-right .up\"),\n    down: s(\".paw-right .down\"),\n  },\n  pawLeft: {\n    up: s(\".paw-left .up\"),\n    down: s(\".paw-left .down\"),\n  },\n};\n\nconst style = getComputedStyle(document.documentElement);\n\nconst green = style.getPropertyValue(\"--green\");\nconst pink = style.getPropertyValue(\"--pink\");\nconst blue = style.getPropertyValue(\"--blue\");\nconst orange = style.getPropertyValue(\"--orange\");\nconst cyan = style.getPropertyValue(\"--cyan\");\n\ngsap.set(music.note, { scale: 0, autoAlpha: 1 });\n\nconst animatePawState = (selector: string) =>\n  gsap.fromTo(\n    selector,\n    { autoAlpha: 0 },\n    {\n      autoAlpha: 1,\n      duration: 0.01,\n      repeatDelay: 0.19,\n      yoyo: true,\n      repeat: -1,\n    }\n  );\n\nconst tl = gsap.timeline();\n\ntl.add(animatePawState(cat.pawLeft.up), \"start\")\n  .add(animatePawState(cat.pawRight.down), \"start\")\n  .add(animatePawState(cat.pawLeft.down), \"start+=0.19\")\n  .add(animatePawState(cat.pawRight.up), \"start+=0.19\")\n  .timeScale(1.6);\n\ngsap.from(\".terminal-code line\", {\n  drawSVG: \"0%\",\n  duration: 0.1,\n  stagger: 0.1,\n  ease: \"none\",\n  repeat: -1,\n});\n\n// typing for pipe function doesn't seem to be working for usage when partially applied?\nconst noteElFn: Function = gsap.utils.pipe(gsap.utils.toArray, gsap.utils.shuffle);\nconst noteEls: HTMLElement[] = noteElFn(music.note);\n\nconst numNotes = noteEls.length / 3;\nconst notesG1 = noteEls.splice(0, numNotes);\nconst notesG2 = noteEls.splice(0, numNotes);\nconst notesG3 = noteEls;\n\nconst colorizer = gsap.utils.random([green, pink, blue, orange, cyan, \"#a3a4ec\", \"#67b5c0\", \"#fd7c6e\"], true);\nconst rotator = gsap.utils.random(-50, 50, 1, true);\nconst dir = (amt: number) => `${gsap.utils.random([\"-\", \"+\"])}=${amt}`;\n\nconst animateNotes = (els: HTMLElement[]): GSAPTween => {\n  els.forEach((el) => {\n    gsap.set(el, {\n      stroke: colorizer(),\n      rotation: rotator(),\n      x: gsap.utils.random(-25, 25, 1),\n    });\n  });\n\n  return gsap.fromTo(\n    els,\n    {\n      autoAlpha: 1,\n      y: 0,\n      scale: 0,\n    },\n    {\n      duration: 2,\n      autoAlpha: 0,\n      scale: 1,\n      ease: \"none\",\n      stagger: {\n        from: \"random\",\n        each: 0.5,\n      },\n      rotation: dir(gsap.utils.random(20, 30, 1)),\n      x: dir(gsap.utils.random(40, 60, 1)),\n      y: gsap.utils.random(-200, -220, 1),\n      onComplete: () => animateNotes(els),\n    }\n  );\n};\n\ntl.add(animateNotes(notesG1)).add(animateNotes(notesG2), \">0.05\").add(animateNotes(notesG3), \">0.25\");"]}